name: Build
on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        build_type:
          - Release
          - Debug
        compiler:
          - gcc-13
          - llvm-18
          - msvc
        exclude:
          - os: ubuntu-latest
            compiler: msvc
          - os: windows-latest
            compiler: gcc-13
          - os: windows-latest
            compiler: llvm-18
    steps:
      - uses: actions/checkout@v4

      - name: Install X11
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install xorg-dev

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          version: latest
          cache: true

      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.19
        with:
          log-file-suffix: '${{github.job}}-${{matrix.os}}-${{matrix.compiler}}-${{matrix.build_type}}.txt'

      - name: Setup Cache
        uses: ./.github/actions/setup-cache
        with:
          compiler: ${{ matrix.compiler }}
          build_type: ${{ matrix.build_type }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows' )}}
          cmake: true
          ninja: true
          ccache: true

      - name: Configure CMake
        run: >-
            cmake -S . -B ./build -G Ninja
            -D${{ env.PROJECT_NAME }}_ENABLE_IPO=ON
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
            -D${{ env.PROJECT_NAME }}_ENABLE_CACHE=ON
            -DGLFW_BUILD_WAYLAND=OFF
      - name: Build
        run: |
          cmake --build ./build --config ${{matrix.build_type}}

  StaticAnalysis:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        compiler:
          - gcc-13
          - llvm-18
        build_type:
          - Debug
    steps:
      - uses: actions/checkout@v4

      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Install X11
        run: |
          sudo apt update
          sudo apt install xorg-dev

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          version: latest
          cache: true

      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.19
        with:
          log-file-suffix: '${{github.job}}-${{matrix.os}}-${{matrix.compiler}}-${{matrix.build_type}}.txt'

      - name: Setup Cache
        uses: ./.github/actions/setup-cache
        with:
          compiler: ${{ matrix.compiler }}
          build_type: ${{ matrix.build_type }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v0.45.0
        with:
          compiler: ${{ matrix.compiler }}
          cmake: true
          ninja: true
          ccache: true
          clangtidy: true
          cppcheck: true

      - name: Configure CMake
        run: >-
          cmake -S . -B ./build -G Ninja
          -D${{ env.PROJECT_NAME }}_ENABLE_IPO=ON
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -D${{ env.PROJECT_NAME }}_ENABLE_CACHE=ON
          -D${{ env.PROJECT_NAME }}_WARNINGS_AS_ERRORS=ON
          -D${{ env.PROJECT_NAME }}_ENABLE_CLANG_TIDY=ON 
          -D${{ env.PROJECT_NAME }}_ENABLE_CPPCHECK=ON 
          -DGLFW_BUILD_WAYLAND=OFF
      - name: Build
        run: |
          cmake --build ./build --config ${{matrix.build_type}}
